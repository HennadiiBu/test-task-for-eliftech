{"version":3,"file":"static/js/15.724a88c4.chunk.js","mappings":"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","sources":["webpack://test-task-for-eliftech/./src/components/Shop/ShopingCard/ShopingCard.module.css?cbbd","components/Shop/ShopingCard/ShopingCardItem.jsx","components/Shop/ShopingCard/ShopingCardList.jsx","pages/ShopingCardPage.jsx","redux/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"shopingCardcontainer\":\"ShopingCard_shopingCardcontainer__11pwK\",\"shopingCarditem\":\"ShopingCard_shopingCarditem__hjJup\",\"shopingCardfakeImg\":\"ShopingCard_shopingCardfakeImg__R+Efe\",\"shopingCardtitle\":\"ShopingCard_shopingCardtitle__Ofeg1\",\"removeIcon\":\"ShopingCard_removeIcon__Se+mQ\",\"shopingCardshopBtn\":\"ShopingCard_shopingCardshopBtn__iV23K\",\"inputData\":\"ShopingCard_inputData__BJMg0\",\"dataBox\":\"ShopingCard_dataBox__fVRcB\",\"userDataBox\":\"ShopingCard_userDataBox__7Xma8\",\"quantityInput\":\"ShopingCard_quantityInput__30sZH\",\"drugBox\":\"ShopingCard_drugBox__QwL5b\",\"form\":\"ShopingCard_form__6PVCG\",\"totalBox\":\"ShopingCard_totalBox__DjyPd\",\"submitBtn\":\"ShopingCard_submitBtn__OjcbI\",\"inputContainer\":\"ShopingCard_inputContainer__F1bQe\",\"text\":\"ShopingCard_text__Ua4eQ\"};","import React, { useEffect, useState } from \"react\";\r\n\r\nimport css from \"./ShopingCard.module.css\";\r\nimport DeleteForeverOutlinedIcon from \"@mui/icons-material/DeleteForeverOutlined\";\r\nimport Notiflix from \"notiflix\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  addQuantity,\r\n  removeShopingCard,\r\n} from \"../../../redux/shopingCardReducer\";\r\n\r\nconst ShopingCardItem = ({ card }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [quantities, setQuantities] = useState({ [card.id]: 1 });\r\n  const [amountPerPosition, setAmountPerPosition] = useState({\r\n    [card.id]: card.price * quantities[card.id],\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(addQuantity(amountPerPosition));\r\n  }, [amountPerPosition, dispatch]);\r\n\r\n  const handleDeleteFromShopingCard = () => {\r\n    dispatch(removeShopingCard(card));\r\n    Notiflix.Notify.success(\"Product successfully removed from shopping card\");\r\n  };\r\n\r\n  const handleQuantityChange = (e) => {\r\n    const newQuantity = parseInt(e.target.value);\r\n    const newAmountPerPosition = {\r\n      ...amountPerPosition,\r\n      [card.id]: card.price * newQuantity,\r\n    };\r\n    setQuantities({ ...quantities, [card.id]: newQuantity });\r\n    setAmountPerPosition(newAmountPerPosition);\r\n    dispatch(addQuantity(amountPerPosition));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <li key={card.id} className={css.shopingCarditem}>\r\n        <div className={css.shopingCardfakeImg}></div>\r\n        <div className={css.drugBox}>\r\n          <h2 className={css.shopingCardtitle}>{card.name}</h2>\r\n          <p>Price: {card.price}</p>\r\n          <input\r\n            type=\"number\"\r\n            className={css.quantityInput}\r\n            value={quantities[card.id]}\r\n            onChange={handleQuantityChange}\r\n          />\r\n        </div>\r\n        <button\r\n          className={css.shopingCardshopBtn}\r\n          onClick={handleDeleteFromShopingCard}\r\n        >\r\n          <DeleteForeverOutlinedIcon className={css.removeIcon} />\r\n        </button>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShopingCardItem;\r\n","import React, { useState } from \"react\";\r\nimport css from \"./ShopingCard.module.css\";\r\nimport ShopingCardItem from \"./ShopingCardItem\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { getShopingCard } from \"../../../redux/selectors\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\n\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nconst ShopingCardList = ({ shopingCard }) => {\r\n  const shopingCards = useSelector(getShopingCard);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  let total = shopingCards.reduce(\r\n    (acc, card) => acc + Number(card.quantity),\r\n    0\r\n  );\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const onSubmit = (data) => {\r\n    handleOpen();\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit(onSubmit)} className={css.form}>\r\n        <div className={css.dataBox}>\r\n          <div className={css.userDataBox}>\r\n            <label>Name</label>\r\n            <div className={css.inputContainer}>\r\n              <input\r\n                defaultValue=\"\"\r\n                {...register(\"name\", { required: true })}\r\n                className={css.inputData}\r\n              />\r\n              {errors.name && (\r\n                <span className={css.text}>*this field is required</span>\r\n              )}\r\n            </div>\r\n\r\n            <label>E-mail</label>\r\n            <div className={css.inputContainer}>\r\n              <input\r\n                defaultValue=\"\"\r\n                {...register(\"email\", { required: true })}\r\n                className={css.inputData}\r\n              />\r\n              {errors.email && (\r\n                <span className={css.text}>*this field is required</span>\r\n              )}\r\n            </div>\r\n\r\n            <label>Phone</label>\r\n            <div className={css.inputContainer}>\r\n              <input\r\n                defaultValue=\"\"\r\n                {...register(\"phone\", {\r\n                  required: true,\r\n                })}\r\n                className={css.inputData}\r\n              />\r\n              {errors.phone && (\r\n                <span className={css.text}>*this field is required</span>\r\n              )}\r\n            </div>\r\n\r\n            <label>Adress</label>\r\n            <div className={css.inputContainer}>\r\n              <input\r\n                defaultValue=\"\"\r\n                {...register(\"adress\", { required: true })}\r\n                className={css.inputData}\r\n              />\r\n              {errors.adress && (\r\n                <span className={css.text}>*this field is required</span>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <ul className={css.shopingCardcontainer}>\r\n            {shopingCard.map((card) => (\r\n              <ShopingCardItem card={card} key={card.id} />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <div className={css.totalBox}>\r\n          <h2>Total Price: {total}</h2>\r\n          <button type=\"submit\" className={css.submitBtn}>\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n      <div>\r\n        <Modal\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\"\r\n        >\r\n          <Box sx={style}>\r\n            <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n              Thank you!\r\n            </Typography>\r\n            <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n              The order has been accepted. Our manager will contact you shortly\r\n            </Typography>\r\n          </Box>\r\n        </Modal>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShopingCardList;\r\n","import React from 'react'\r\nimport {  useSelector } from 'react-redux';\r\nimport { getShopingCard } from '../redux/selectors';\r\nimport ShopingCardList from '../components/Shop/ShopingCard/ShopingCardList';\r\n\r\nconst ShopingCardPage = () => {\r\n\r\n  const shopingCard = useSelector(getShopingCard);\r\n\r\n\r\n  return (\r\n    <ShopingCardList shopingCard={shopingCard}>ShopingCardPage</ShopingCardList>\r\n  )\r\n}\r\n\r\nexport default ShopingCardPage\r\n","export const getDrugs = (state) => state.drugs.drugs;\r\nexport const getFilteredData = (state) => state.drugs.filteredData;\r\n\r\nexport const getShopingCard = (state) => state.shopingCard.shopingCard;\r\n"],"names":["_ref","card","dispatch","useDispatch","quantities","setQuantities","useState","id","amountPerPosition","setAmountPerPosition","price","useEffect","addQuantity","_jsx","_Fragment","children","_jsxs","className","css","name","type","value","onChange","e","newQuantity","parseInt","target","newAmountPerPosition","onClick","handleDeleteFromShopingCard","removeShopingCard","Notiflix","success","DeleteForeverOutlinedIcon","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","shopingCard","shopingCards","useSelector","getShopingCard","open","setOpen","total","reduce","acc","Number","quantity","register","handleSubmit","reset","formState","errors","useForm","onSubmit","data","defaultValue","required","email","phone","adress","map","ShopingCardItem","Modal","onClose","handleClose","Box","sx","Typography","variant","component","mt","ShopingCardPage","ShopingCardList","getDrugs","state","drugs","getFilteredData","filteredData"],"sourceRoot":""}